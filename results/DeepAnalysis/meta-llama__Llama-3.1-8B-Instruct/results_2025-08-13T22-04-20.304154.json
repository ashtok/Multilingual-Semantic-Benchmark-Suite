{
  "results": {
    "analogies_high": {
      "alias": "analogies_high",
      "acc,none": 0.5295833333333333,
      "acc_stderr,none": 0.0072049858056959,
      "acc_norm,none": 0.5491666666666667,
      "acc_norm_stderr,none": 0.0071826502384991645
    },
    "analogies_low": {
      "alias": "analogies_low",
      "acc,none": 0.436,
      "acc_stderr,none": 0.011091145421162667,
      "acc_norm,none": 0.442,
      "acc_norm_stderr,none": 0.011107641056719636
    },
    "analogies_medium": {
      "alias": "analogies_medium",
      "acc,none": 0.4776666666666667,
      "acc_stderr,none": 0.00912111866362726,
      "acc_norm,none": 0.49066666666666664,
      "acc_norm_stderr,none": 0.009128640296023387
    },
    "analogies_mono": {
      "alias": "analogies_mono",
      "acc,none": 0.7509090909090909,
      "acc_stderr,none": 0.013045891843557002,
      "acc_norm,none": 0.6918181818181818,
      "acc_norm_stderr,none": 0.013928381258438103
    }
  },
  "group_subtasks": {
    "analogies_high": [],
    "analogies_low": [],
    "analogies_medium": [],
    "analogies_mono": []
  },
  "configs": {
    "analogies_high": {
      "task": "analogies_high",
      "dataset_path": "json",
      "dataset_kwargs": {
        "data_files": "./lm_eval/tasks/NLP_JMU/semantic_analogy_questions_en_to_high.json"
      },
      "test_split": "train",
      "doc_to_text": "{{prompt}}",
      "doc_to_target": "{{answer_index}}",
      "unsafe_code": false,
      "doc_to_choice": "{{options}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0,
        "description": "Analogies evaluation task with multilingual options",
        "alias": "analogies_high",
        "pretrained": "meta-llama/Llama-3.1-8B-Instruct"
      }
    },
    "analogies_low": {
      "task": "analogies_low",
      "dataset_path": "json",
      "dataset_kwargs": {
        "data_files": "./lm_eval/tasks/NLP_JMU/semantic_analogy_questions_en_to_low.json"
      },
      "test_split": "train",
      "doc_to_text": "{{prompt}}",
      "doc_to_target": "{{answer_index}}",
      "unsafe_code": false,
      "doc_to_choice": "{{options}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0,
        "description": "Analogies evaluation task with multilingual options",
        "alias": "analogies_low",
        "pretrained": "meta-llama/Llama-3.1-8B-Instruct"
      }
    },
    "analogies_medium": {
      "task": "analogies_medium",
      "dataset_path": "json",
      "dataset_kwargs": {
        "data_files": "./lm_eval/tasks/NLP_JMU/semantic_analogy_questions_en_to_medium.json"
      },
      "test_split": "train",
      "doc_to_text": "{{prompt}}",
      "doc_to_target": "{{answer_index}}",
      "unsafe_code": false,
      "doc_to_choice": "{{options}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0,
        "description": "Analogies evaluation task with multilingual options",
        "alias": "analogies_medium",
        "pretrained": "meta-llama/Llama-3.1-8B-Instruct"
      }
    },
    "analogies_mono": {
      "task": "analogies_mono",
      "dataset_path": "json",
      "dataset_kwargs": {
        "data_files": "./lm_eval/tasks/NLP_JMU/semantic_analogy_questions_monolingual_en.json"
      },
      "test_split": "train",
      "doc_to_text": "{{prompt}}",
      "doc_to_target": "{{answer_index}}",
      "unsafe_code": false,
      "doc_to_choice": "{{options}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0,
        "description": "Analogies evaluation task with multilingual options",
        "alias": "analogies_mono",
        "pretrained": "meta-llama/Llama-3.1-8B-Instruct"
      }
    }
  },
  "versions": {
    "analogies_high": 1.0,
    "analogies_low": 1.0,
    "analogies_medium": 1.0,
    "analogies_mono": 1.0
  },
  "n-shot": {
    "analogies_high": 5,
    "analogies_low": 5,
    "analogies_medium": 5,
    "analogies_mono": 5
  },
  "higher_is_better": {
    "analogies_high": {
      "acc": true,
      "acc_norm": true
    },
    "analogies_low": {
      "acc": true,
      "acc_norm": true
    },
    "analogies_medium": {
      "acc": true,
      "acc_norm": true
    },
    "analogies_mono": {
      "acc": true,
      "acc_norm": true
    }
  },
  "n-samples": {
    "analogies_mono": {
      "original": 1100,
      "effective": 1100
    },
    "analogies_medium": {
      "original": 3000,
      "effective": 3000
    },
    "analogies_low": {
      "original": 2000,
      "effective": 2000
    },
    "analogies_high": {
      "original": 4800,
      "effective": 4800
    }
  },
  "config": {
    "model": "hf",
    "model_args": "pretrained=meta-llama/Llama-3.1-8B-Instruct",
    "model_num_parameters": 8030261248,
    "model_dtype": "torch.bfloat16",
    "model_revision": "main",
    "model_sha": "0e9e39f249a16976918f6564b8830bc894c89659",
    "batch_size": "4",
    "batch_sizes": [],
    "device": "cuda",
    "use_cache": null,
    "limit": null,
    "bootstrap_iters": 100000,
    "gen_kwargs": null,
    "random_seed": 0,
    "numpy_seed": 1234,
    "torch_seed": 1234,
    "fewshot_seed": 1234
  },
  "git_hash": "add62bd",
  "date": 1755114044.7843177,
  "pretty_env_info": "PyTorch version: 2.5.1\nIs debug build: False\nCUDA used to build PyTorch: 12.1\nROCM used to build PyTorch: N/A\n\nOS: Debian GNU/Linux 12 (bookworm) (x86_64)\nGCC version: (Debian 12.2.0-14) 12.2.0\nClang version: 14.0.6\nCMake version: version 3.25.1\nLibc version: glibc-2.36\n\nPython version: 3.10.18 (main, Jun  5 2025, 13:14:17) [GCC 11.2.0] (64-bit runtime)\nPython platform: Linux-6.1.0-33-amd64-x86_64-with-glibc2.36\nIs CUDA available: True\nCUDA runtime version: Could not collect\nCUDA_MODULE_LOADING set to: LAZY\nGPU models and configuration: GPU 0: NVIDIA L40S\nNvidia driver version: 560.28.03\ncuDNN version: Could not collect\nHIP runtime version: N/A\nMIOpen runtime version: N/A\nIs XNNPACK available: True\n\nCPU:\nArchitecture:                         x86_64\nCPU op-mode(s):                       32-bit, 64-bit\nAddress sizes:                        48 bits physical, 48 bits virtual\nByte Order:                           Little Endian\nCPU(s):                               128\nOn-line CPU(s) list:                  0-127\nVendor ID:                            AuthenticAMD\nModel name:                           AMD EPYC 7713 64-Core Processor\nCPU family:                           25\nModel:                                1\nThread(s) per core:                   1\nCore(s) per socket:                   64\nSocket(s):                            2\nStepping:                             1\nFrequency boost:                      enabled\nCPU(s) scaling MHz:                   84%\nCPU max MHz:                          2000.0000\nCPU min MHz:                          1500.0000\nBogoMIPS:                             3999.67\nFlags:                                fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc cpuid extd_apicid aperfmperf rapl pni pclmulqdq monitor ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt aes xsave avx f16c rdrand lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt tce topoext perfctr_core perfctr_nb bpext perfctr_llc mwaitx cpb cat_l3 cdp_l3 invpcid_single hw_pstate ssbd mba ibrs ibpb stibp vmmcall fsgsbase bmi1 avx2 smep bmi2 erms invpcid cqm rdt_a rdseed adx smap clflushopt clwb sha_ni xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local clzero irperf xsaveerptr rdpru wbnoinvd amd_ppin brs arat npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold v_vmsave_vmload vgif v_spec_ctrl umip pku ospke vaes vpclmulqdq rdpid overflow_recov succor smca fsrm\nVirtualization:                       AMD-V\nL1d cache:                            4 MiB (128 instances)\nL1i cache:                            4 MiB (128 instances)\nL2 cache:                             64 MiB (128 instances)\nL3 cache:                             512 MiB (16 instances)\nNUMA node(s):                         8\nNUMA node0 CPU(s):                    0-15\nNUMA node1 CPU(s):                    16-31\nNUMA node2 CPU(s):                    32-47\nNUMA node3 CPU(s):                    48-63\nNUMA node4 CPU(s):                    64-79\nNUMA node5 CPU(s):                    80-95\nNUMA node6 CPU(s):                    96-111\nNUMA node7 CPU(s):                    112-127\nVulnerability Gather data sampling:   Not affected\nVulnerability Itlb multihit:          Not affected\nVulnerability L1tf:                   Not affected\nVulnerability Mds:                    Not affected\nVulnerability Meltdown:               Not affected\nVulnerability Mmio stale data:        Not affected\nVulnerability Reg file data sampling: Not affected\nVulnerability Retbleed:               Not affected\nVulnerability Spec rstack overflow:   Mitigation; safe RET\nVulnerability Spec store bypass:      Mitigation; Speculative Store Bypass disabled via prctl\nVulnerability Spectre v1:             Mitigation; usercopy/swapgs barriers and __user pointer sanitization\nVulnerability Spectre v2:             Mitigation; Retpolines; IBPB conditional; IBRS_FW; STIBP disabled; RSB filling; PBRSB-eIBRS Not affected; BHI Not affected\nVulnerability Srbds:                  Not affected\nVulnerability Tsx async abort:        Not affected\n\nVersions of relevant libraries:\n[pip3] numpy==2.0.1\n[pip3] torch==2.5.1\n[pip3] torchaudio==2.5.1\n[pip3] torchvision==0.20.1\n[pip3] triton==3.1.0\n[conda] blas                       1.0              mkl\n[conda] ffmpeg                     4.3              hf484d3e_0                    pytorch\n[conda] libjpeg-turbo              2.0.0            h9bf148f_0                    pytorch\n[conda] mkl                        2023.1.0         h213fc3f_46344\n[conda] mkl-service                2.4.0            py310h5eee18b_2\n[conda] mkl_fft                    1.3.11           py310h5eee18b_0\n[conda] mkl_random                 1.2.8            py310h1128e8f_0\n[conda] numpy                      2.0.1            py310h5f9d8c6_1\n[conda] numpy-base                 2.0.1            py310hb5e798b_1\n[conda] pytorch                    2.5.1            py3.10_cuda12.1_cudnn9.1.0_0  pytorch\n[conda] pytorch-cuda               12.1             ha16c6d3_6                    pytorch\n[conda] pytorch-mutex              1.0              cuda                          pytorch\n[conda] torchaudio                 2.5.1            py310_cu121                   pytorch\n[conda] torchtriton                3.1.0            py310                         pytorch\n[conda] torchvision                0.20.1           py310_cu121                   pytorch",
  "transformers_version": "4.55.0",
  "lm_eval_version": "0.4.9",
  "upper_git_hash": "add62bdaff65f5272a429fb503e7f23cb0052c9d",
  "tokenizer_pad_token": [
    "<|eot_id|>",
    "128009"
  ],
  "tokenizer_eos_token": [
    "<|eot_id|>",
    "128009"
  ],
  "tokenizer_bos_token": [
    "<|begin_of_text|>",
    "128000"
  ],
  "eot_token_id": 128009,
  "max_length": 131072,
  "task_hashes": {
    "analogies_mono": "8cd911355884d033ebbab4e4d07b27212350e45481abf4c8f768363f5514549b",
    "analogies_medium": "f72605dcd45362cdb38e45737c5cd04da22e3b1f9b9ea2d7bcab33d3a6a49969",
    "analogies_low": "b9b997f0a7af2c8b65b344796cf0e91e9092cc7ddf8676925546c13018b6888d",
    "analogies_high": "f04e63a33fa69285a9c0aa120f5729befb7b08e241f703431f7c5e3df59ea1af"
  },
  "model_source": "hf",
  "model_name": "meta-llama/Llama-3.1-8B-Instruct",
  "model_name_sanitized": "meta-llama__Llama-3.1-8B-Instruct",
  "system_instruction": null,
  "system_instruction_sha": null,
  "fewshot_as_multiturn": false,
  "chat_template": null,
  "chat_template_sha": null,
  "start_time": 104368.823968294,
  "end_time": 105784.869664773,
  "total_evaluation_time_seconds": "1416.0456964789919"
}